import argparse

parser = argparse.ArgumentParser()

parser.add_argument('-W', dest='capacity', type=int)
parser.add_argument('-w', dest='weights', nargs='*', type=int)
parser.add_argument('-n', dest='bars_number', type=int)

args = parser.parse_args()

capacity = args.capacity
weights = args.weights
bars_number = args.bars_number
len_weights = len(weights)

def knapsack(capacity, weights, bars_number):
    knap = [[0 for i in range(capacity + 1)] for i in range(bars_number + 1)]

    for i in range(1, bars_number + 1):
        for j in range(capacity + 1):
            if weights[i - 1] <= j:
                knap[i][j] = max(weights[i - 1] + knap[i - 1][j - weights[i - 1]], knap[i - 1][j])
            else:
                knap[i][j] = knap[i - 1][j]

    return knap[bars_number][capacity]

if len_weights == bars_number and min(weights) > 0:
    print(knapsack(capacity, weights, bars_number))
else:
    print('Error: Incorect data')
